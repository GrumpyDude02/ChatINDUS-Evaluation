# does not like prompts that ask about multiple things
https://github.com/OmarAbdelzaher/Database-CMMS-SQL

# sensible aux erreur d'orthographe(typo)
- (nothwind) donner la categorie des produits la plus rendtable:
SELECT T1.ProductName, T2.CategoryName FROM Products AS T1 INNER JOIN Categories AS T2 ON T1.CategoryID = T2.CategoryID ORDER BY T1.UnitsInStock DESC LIMIT 1;

- (nothwind)donner la categorie des produits la plus rentable
SELECT T1.ProductName, T2.CategoryName FROM Products AS T1 INNER JOIN Categories AS T2 ON T1.CategoryID = T2.CategoryID ORDER BY T1.UnitPrice DESC LIMIT 1;

# problem with joins (if the schema design is complex enough)
- (nothwind)donner la demographie des consomateurs qui ont acheté plus de 100 boissons
T2.CustomerDesc FROM Order Details AS T1 INNER JOIN CustomerDemographics AS T2 ON T1.OrderID = T1.OrderID INNER JOIN Customers AS T3 ON T1.OrderID = T3.CustomerID GROUP BY T2.CustomerDesc HAVING COUNT(T1.ProductID) > 100;

- (nothwind)donnez la region avec le plus d'employé
SELECT T2.RegionDescription FROM Employees AS T1 INNER JOIN Territories AS T2 ON T1.EmployeeID = T2.RegionID GROUP BY T2.RegionDescription ORDER BY COUNT(*) DESC LIMIT 1;

- (adventure works)donnez l'adresse des clients ayant commandé plus de 30 pieces de n'importe quel produit
SELECT T3.FirstName, T3.LastName, T3.EmailAddress FROM SalesOrderHeader AS T1 INNER JOIN SalesOrderDetail AS T2 ON T1.SalesOrderID = T2.SalesOrderID INNER JOIN Customer AS T3 ON T3.CustomerID = T1.CustomerID INNER JOIN Address AS T4 ON T4.AddressID = T3.CustomerID GROUP BY T3.CustomerID HAVING COUNT(T2.ProductID) > 30; (ambiguïté du nom de la table. Il n'y a pas de table nommée Address la table s'appelle CustomerAddress)


# Long inefficient requests (cause ???) - should give the same result but no (prompts in English seems to give more correct requeste)
- (car_retails) liste des ordres 
-SELECT * FROM orders WHERE status = 'Shipped' OR status = 'On Hold' OR status = 'Processing' OR status = 'Completed' OR status = 'Packed' OR status = 'Derated' OR status = 'On Hold' OR status = 'Disputed' OR status = 'Canceled' OR status = 'Resolved' OR status = 'Pending' OR status = 'Scheduled' OR status = 'Open' OR status = 'Dispatch' OR status = 'In Process' OR status = 'Wrapped' OR status = 'Unwrapped' OR status = 'Stornowany' OR status = 'Zakończony' OR status = 'W trakcie' OR status = 'Zamknięty' OR status = 'Zakończony' OR status = 'W trakcie' OR status = 'Zamknięty' OR status = 'Zakończony' OR status = 'W trakcie' OR status = 'Zamknięty' OR status = 'Zakończony' OR status = 'W trakcie' OR status

- (car_retails) give all of the orders (good)
SELECT * FROM orders

- donnez la liste des ordres
SELECT * FROM orders WHERE status = 'Shipped' OR status = 'On Hold' OR status = 'Processing' OR status = 'Completed' OR status = 'Canceled'

-le clients ayant passé plus de commandes que la moyenne (missing a join with another table to get order qty - poor awareness of tables???)
SELECT T1.CompanyName FROM Customer AS T1 INNER JOIN SalesOrderHeader AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CompanyName HAVING COUNT(*) > ( SELECT AVG(OrderQty) FROM SalesOrderDetail )

- quels sont les clients ayant commandé après 60 jours de leurs dernières commandes
SELECT T1.FirstName, T1.LastName FROM Customer AS T1 INNER JOIN SalesOrderHeader AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.OrderDate ≥ datetime('now','60 days') GROUP BY T1.FirstName, T1.LastName HAVING COUNT(*) > 60;


# Error Decoding (sqlite problem)

- ()liste des clients:
Une erreur est survenue : (sqlite3.OperationalError) Could not decode to UTF-8 column 'LastName' with text 'Mart nez' (Background on this error at: https://sqlalche.me/e/20/e3q8)



- (sakila)donnez les catégories de films les plus rentables
SELECT T3.name FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id ORDER BY T1.replacement_cost DESC LIMIT 10


- (sakila) donnez les acteurs qui sont dans les films les plus loués (incorrect missing a lot of joins)
SELECT T1.first_name, T1.last_name FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id GROUP BY T1.first_name, T1.last_name ORDER BY COUNT(*) DESC LIMIT 10

SELECT T2.duty_amount FROM commodities AS T1 INNER JOIN measure_components AS T2 ON T1.id = T2.component_measurement_id WHERE T1.item_id = 'example_commodity' ORDER BY T2.duty_amount DESC;