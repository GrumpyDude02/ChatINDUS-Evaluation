[
  {
    "prompt": "donnez les adresses",
    "query": "SELECT * FROM Address;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "Quels sont les employés qui n'ont pas de rapport direct avec un autre employé ?",
    "query": "SELECT E.FirstName, E.LastName FROM Employee E WHERE E.ReportsTo IS NULL",
    "difficulty":"easy",
    "db_id":"chinook"
  },
  {
    "prompt": "les clients ayant une adresse mail",
    "query": "SELECT FirstName, LastName FROM Customer WHERE Customer.EmailAddress IS NOT NULL;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "donnez toutes les categories des produits",
    "query": "SELECT Name FROM ProductCategory;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "donnez les couleurs que peut avoir un produit",
    "query": "SELECT DISTINCT Color FROM Product;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "donnez les prix des produits",
    "query": "SELECT Name, ListPrice FROM Product;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "donnez tous les ordres",
    "query": "SELECT * FROM SalesOrderDetail;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "donnez les types d'adresses",
    "query": "SELECT DISTINCT AddressType FROM CustomerAddress;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "donnez les méthodes de livraison",
    "query": "SELECT DISTINCT ShipMethod FROM SalesOrderHeader;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "donnez la moyenne du poids des produits",
    "query": "SELECT AVG(Weight) FROM Product;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "affichez les produits avec une vente inferieur de 500 pièces",
    "query": "SELECT P.ProductID, P.Name, SUM(SD.OrderQty) AS TotalSold FROM Product P JOIN SalesOrderDetail SD ON P.ProductID = SD.ProductID GROUP BY P.ProductID HAVING TotalSold < 500 ORDER BY TotalSold ASC;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "donnez le vendeur qui a le plus de client",
    "query": "SELECT SalesPerson, Count(*) AS CustomerCount from Customer GROUP BY SalesPerson ORDER BY CustomerCount DESC LIMIT 1;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "donnez les produits avec une durée entre le debut et fin de vente de 10 jours",
    "query": "SELECT Product.Name FROM PRODUCT WHERE SellEndDate IS NOT NULL AND julianday(SellEndDate) - julianday(SellStartDate) = 10;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "les clients avec plusieurs adresses",
    "query": "SELECT Customer.LastName, Customer.FirstName FROM Customer INNER JOIN CustomerAddress ON CustomerAddress.CustomerID=Customer.CustomerID GROUP BY Customer.CustomerID HAVING COUNT(CustomerAddress.AddressID) > 1",
    "db_id": "adventure_works"
  },
  {
    "prompt": "la commande la plus récente passée par chaque client",
    "query": "SELECT SO.CustomerID, SO.SalesOrderID, SO.OrderDate FROM SalesOrderHeader SO INNER JOIN (SELECT CustomerID, MAX(OrderDate) AS LatestOrderDate FROM SalesOrderHeader GROUP BY CustomerID) AS LatestOrders ON SO.CustomerID = LatestOrders.CustomerID AND SO.OrderDate = LatestOrders.LatestOrderDate;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "Quels sont les modèles de produit qui n'ont aucune description associée ?",
    "query": "SELECT PM.ProductModelID, PM.Name FROM ProductModel AS PM LEFT JOIN ProductModelProductDescription AS PMPD ON PM.ProductModelID = PMPD.ProductModelID WHERE PMPD.ProductDescriptionID IS NULL;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "totale des ventes par mois (TotalDue)",
    "query": "SELECT strftime('%Y-%m', OrderDate) AS YearMonth, SUM(TotalDue) AS TotalSales FROM SalesOrderHeader GROUP BY YearMonth ORDER BY YearMonth;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "Affiche les produits dont le prix de vente est inférieur à 500",
    "query": "SELECT Name FROM Product WHERE ListPrice < 500",
    "db_id": "adventure_works"
  },
  {
    "prompt": "les 5 clients avec le plus grand nombre de commandes",
    "query": "SELECT C.FirstName, C.LastName, COUNT(SOH.SalesOrderID) AS OrderCount FROM Customer AS C INNER JOIN SalesOrderHeader AS SOH ON C.CustomerID = SOH.CustomerID GROUP BY C.FirstName, C.LastName ORDER BY OrderCount DESC LIMIT 5;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "Donnez les produits associés à un modèle mais sans catégorie.",
    "query": "SELECT P.ProductID, P.Name, P.ProductModelID FROM Product AS P INNER JOIN ProductModel AS PM ON P.ProductModelID = PM.ProductModelID WHERE P.ProductModelID IS NOT NULL AND P.ProductCategoryID IS NULL;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "Donnez la liste des produits jamais commandés dans aucune commande.",
    "query": "SELECT p.ProductID, p.Name FROM Product p LEFT JOIN SalesOrderDetail sod ON p.ProductID = sod.ProductID WHERE sod.ProductID IS NULL;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "Pour chaque produit, donne le nombre de fois qu'il a été commandé et la quantité totale.",
    "query": "SELECT p.ProductID, p.Name, COUNT(sod.SalesOrderDetailID) AS times_ordered, SUM(sod.OrderQty) AS total_quantity FROM Product p LEFT JOIN SalesOrderDetail sod ON p.ProductID = sod.ProductID GROUP BY p.ProductID;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "Affiche le chiffre d'affaires total généré par chaque catégorie de produit.",
    "query": "SELECT pc.Name AS category, SUM(sod.LineTotal) AS total_revenue FROM SalesOrderDetail sod JOIN Product p ON sod.ProductID = p.ProductID JOIN ProductCategory pc ON p.ProductCategoryID = pc.ProductCategoryID GROUP BY pc.ProductCategoryID;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "Quels clients ont passé des commandes vers plus d'une adresse de livraison différente ?",
    "query": "SELECT CustomerID FROM SalesOrderHeader GROUP BY CustomerID HAVING COUNT(DISTINCT ShipToAddressID) > 1;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "la moyenne des commandes expédiées par mois",
    "query": "WITH MonthlyCounts AS (SELECT STRFTIME('%Y-%m', ShipDate) AS month,COUNT(DISTINCT SalesOrderID) AS shipped_orders FROM SalesOrderHeader WHERE ShipDate IS NOT NULL GROUP BY month) SELECT AVG(shipped_orders) AS avg_orders_per_month FROM MonthlyCounts;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "les produits les plus commandés",
    "query": "SELECT p.Name, SUM(sod.OrderQty) AS total_quantity FROM SalesOrderDetail sod JOIN Product p ON sod.ProductID = p.ProductID GROUP BY sod.ProductID ORDER BY total_quantity DESC LIMIT 10;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "le nombre de commande expédiées par mois",
    "query": "SELECT STRFTIME('%Y-%m', ShipDate) AS month, COUNT(DISTINCT SalesOrderID) AS shipped_orders FROM SalesOrderHeader WHERE ShipDate IS NOT NULL GROUP BY month ORDER BY month;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "les clients ayant dépensé le plus en commandes",
    "query": "SELECT STRFTIME('%Y-%m', ShipDate) AS month, COUNT(DISTINCT SalesOrderID) AS shipped_orders FROM SalesOrderHeader WHERE ShipDate IS NOT NULL GROUP BY month ORDER BY month;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "Pour chaque client, affichez la date de sa première commande et le montant total de ses commandes.",
    "query": "SELECT c.CustomerID, MIN(soh.OrderDate) AS first_order_date, SUM(soh.TotalDue) AS total_spent FROM SalesOrderHeader soh JOIN Customer c ON soh.CustomerID = c.CustomerID GROUP BY c.CustomerID;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "les 5 villes avec le plus de clients ayant passé au moins une commande",
    "query": "SELECT a.City, COUNT(DISTINCT soh.CustomerID) AS unique_customers FROM SalesOrderHeader soh JOIN Address a ON soh.ShipToAddressID = a.AddressID GROUP BY a.City ORDER BY unique_customers DESC LIMIT 5;",
    "db_id": "adventure_works"
  },
  {
    "prompt": "donnez la description de chaque produit",
    "query": "SELECT p.ProductID, p.Name, pd.Description FROM Product p JOIN ProductModelProductDescription pmpd ON p.ProductModelID = pmpd.ProductModelID JOIN ProductDescription pd ON pmpd.ProductDescriptionID = pd.ProductDescriptionID;",
    "db_id": "adventure_works"
  }
]