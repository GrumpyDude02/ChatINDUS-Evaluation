[
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "donnez les adresses",
        "query": "SELECT * FROM Address;",
        "db_id": "adventure_works",
        "generated": "SELECT T2.AddressLine1, T2.AddressLine2 FROM CustomerAddress AS T1 INNER JOIN Address AS T2 ON T1.AddressID = T2.AddressID WHERE T1.CustomerID = 1",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT * FROM Address;",
        "question": "donnez les adresses"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "Quels sont les employés qui n'ont pas de rapport direct avec un autre employé ?",
        "query": "SELECT E.FirstName, E.LastName FROM Employee E WHERE E.ReportsTo IS NULL",
        "db_id": "chinook",
        "generated": "SELECT FirstName , LastName FROM Employee WHERE ReportsTo != (SELECT EmployeeId FROM Employee WHERE LastName = 'King')",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/chinook/chinook.sqlite",
        "SQL": "SELECT E.FirstName, E.LastName FROM Employee E WHERE E.ReportsTo IS NULL",
        "question": "Quels sont les employés qui n'ont pas de rapport direct avec un autre employé ?"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "les clients ayant une adresse mail",
        "query": "SELECT FirstName, LastName FROM Customer WHERE Customer.EmailAddress IS NOT NULL;",
        "db_id": "adventure_works",
        "generated": "SELECT T1.FirstName ,  T1.LastName FROM Customer AS T1 INNER JOIN CustomerAddress AS T2 ON T1.CustomerID  =  T2.CustomerID INNER JOIN Address AS T3 ON T2.AddressID  =  T3.AddressID WHERE T1.EmailAddress  =  \"fran�ois1@adventure-works.com\";",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT FirstName, LastName FROM Customer WHERE Customer.EmailAddress IS NOT NULL;",
        "question": "les clients ayant une adresse mail"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "donnez toutes les categories des produits",
        "query": "SELECT Name FROM ProductCategory;",
        "db_id": "adventure_works",
        "generated": "SELECT Name FROM ProductCategory;",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT Name FROM ProductCategory;",
        "question": "donnez toutes les categories des produits"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "donnez les couleurs que peut avoir un produit",
        "query": "SELECT DISTINCT Color FROM Product;",
        "db_id": "adventure_works",
        "generated": "SELECT DISTINCT Color FROM Product;",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT DISTINCT Color FROM Product;",
        "question": "donnez les couleurs que peut avoir un produit"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "donnez les prix des produits",
        "query": "SELECT Name, ListPrice FROM Product;",
        "db_id": "adventure_works",
        "generated": "SELECT ListPrice FROM Product WHERE Name = 'Dark Chocolate Buns'",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT Name, ListPrice FROM Product;",
        "question": "donnez les prix des produits"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "donnez tous les ordres",
        "query": "SELECT * FROM SalesOrderDetail;",
        "db_id": "adventure_works",
        "generated": "SELECT * FROM SalesOrderHeader WHERE Status = 1 OR Status = 2 OR Status = 3 OR Status = 4 OR Status = 5 OR Status = 6 OR Status = 7 OR Status = 8 OR Status = 9 OR Status = 10 OR Status = 11 OR Status = 12 OR Status = 13 OR Status = 14 OR Status = 15 OR Status = 16 OR Status = 17 OR Status = 18 OR Status = 19 OR Status = 20 OR Status = 21 OR Status = 22 OR Status = 23 OR Status = 24 OR Status = 25 OR Status = 26 OR Status = 27 OR Status = 28 OR Status = 29 OR Status = 30 OR Status = 31 OR Status = 32 OR Status = 33 OR Status = 34 OR Status = 35 OR Status = 36 OR Status = 37 OR Status = 38 OR Status = 39 OR Status = 40 OR Status = 41 OR Status = 42 OR Status = 43 OR Status = 44 OR Status = 45 OR Status = 46 OR Status = 47 OR Status = 48 OR Status = 49 OR Status = 50 OR Status = 51 OR Status = 5",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT * FROM SalesOrderDetail;",
        "question": "donnez tous les ordres"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "donnez les types d'adresses",
        "query": "SELECT DISTINCT AddressType FROM CustomerAddress;",
        "db_id": "adventure_works",
        "generated": "SELECT DISTINCT AddressType FROM CustomerAddress WHERE AddressType IS NOT NULL;",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT DISTINCT AddressType FROM CustomerAddress;",
        "question": "donnez les types d'adresses"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "donnez les méthodes de livraison",
        "query": "SELECT DISTINCT ShipMethod FROM SalesOrderHeader;",
        "db_id": "adventure_works",
        "generated": "SELECT DISTINCT ShipMethod FROM SalesOrderHeader WHERE ShipMethod IS NOT NULL;",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT DISTINCT ShipMethod FROM SalesOrderHeader;",
        "question": "donnez les méthodes de livraison"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "donnez la moyenne du poids des produits",
        "query": "SELECT AVG(Weight) FROM Product;",
        "db_id": "adventure_works",
        "generated": "SELECT AVG(Weight) FROM Product;",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT AVG(Weight) FROM Product;",
        "question": "donnez la moyenne du poids des produits"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "affichez les produits avec une vente inferieur de 500 pièces",
        "query": "SELECT P.ProductID, P.Name, SUM(SD.OrderQty) AS TotalSold FROM Product P JOIN SalesOrderDetail SD ON P.ProductID = SD.ProductID GROUP BY P.ProductID HAVING TotalSold < 500 ORDER BY TotalSold ASC;",
        "db_id": "adventure_works",
        "generated": "SELECT T1.Name FROM Product AS T1 INNER JOIN SalesOrderDetail AS T2 ON T1.ProductID = T2.ProductID WHERE T2.UnitPrice < 500 GROUP BY T1.Name HAVING COUNT(T2.UnitPrice) < 500;",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT P.ProductID, P.Name, SUM(SD.OrderQty) AS TotalSold FROM Product P JOIN SalesOrderDetail SD ON P.ProductID = SD.ProductID GROUP BY P.ProductID HAVING TotalSold < 500 ORDER BY TotalSold ASC;",
        "question": "affichez les produits avec une vente inferieur de 500 pièces"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "donnez le vendeur qui a le plus de client",
        "query": "SELECT SalesPerson, Count(*) AS CustomerCount from Customer GROUP BY SalesPerson ORDER BY CustomerCount DESC LIMIT 1;",
        "db_id": "adventure_works",
        "generated": "SELECT T1.FirstName, T1.LastName FROM Customer AS T1 JOIN SalesPerson AS T2 ON T1.SalesPerson = T2.BusinessEntityID GROUP BY T2.BusinessEntityID ORDER BY COUNT(*) DESC LIMIT 1",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT SalesPerson, Count(*) AS CustomerCount from Customer GROUP BY SalesPerson ORDER BY CustomerCount DESC LIMIT 1;",
        "question": "donnez le vendeur qui a le plus de client"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "donnez les produits avec une durée entre le debut et fin de vente de 10 jours",
        "query": "SELECT Product.Name FROM PRODUCT WHERE SellEndDate IS NOT NULL AND julianday(SellEndDate) - julianday(SellStartDate) = 10;",
        "db_id": "adventure_works",
        "generated": "SELECT T2.Name FROM SalesOrderDetail AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T1.UnitPrice > ( SELECT AVG(UnitPrice) FROM SalesOrderDetail ) GROUP BY T2.Name HAVING MAX(T1.OrderQty) - MIN(T1.OrderQty) > 10;",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT Product.Name FROM PRODUCT WHERE SellEndDate IS NOT NULL AND julianday(SellEndDate) - julianday(SellStartDate) = 10;",
        "question": "donnez les produits avec une durée entre le debut et fin de vente de 10 jours"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "les clients avec plusieurs adresses",
        "query": "SELECT Customer.LastName, Customer.FirstName FROM Customer INNER JOIN CustomerAddress ON CustomerAddress.CustomerID=Customer.CustomerID GROUP BY Customer.CustomerID HAVING COUNT(CustomerAddress.AddressID) > 1",
        "db_id": "adventure_works",
        "generated": "SELECT T1.FirstName, T1.LastName FROM Customer AS T1 INNER JOIN CustomerAddress AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CustomerID HAVING COUNT(T2.AddressID) > 1;",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT Customer.LastName, Customer.FirstName FROM Customer INNER JOIN CustomerAddress ON CustomerAddress.CustomerID=Customer.CustomerID GROUP BY Customer.CustomerID HAVING COUNT(CustomerAddress.AddressID) > 1",
        "question": "les clients avec plusieurs adresses"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "la commande la plus récente passée par chaque client",
        "query": "SELECT SO.CustomerID, SO.SalesOrderID, SO.OrderDate FROM SalesOrderHeader SO INNER JOIN (SELECT CustomerID, MAX(OrderDate) AS LatestOrderDate FROM SalesOrderHeader GROUP BY CustomerID) AS LatestOrders ON SO.CustomerID = LatestOrders.CustomerID AND SO.OrderDate = LatestOrders.LatestOrderDate;",
        "db_id": "adventure_works",
        "generated": "SELECT T2.FirstName, T2.LastName, T1.OrderDate FROM SalesOrderHeader AS T1 INNER JOIN Customer AS T2 ON T1.CustomerID = T2.CustomerID ORDER BY T1.OrderDate DESC LIMIT 1;",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT SO.CustomerID, SO.SalesOrderID, SO.OrderDate FROM SalesOrderHeader SO INNER JOIN (SELECT CustomerID, MAX(OrderDate) AS LatestOrderDate FROM SalesOrderHeader GROUP BY CustomerID) AS LatestOrders ON SO.CustomerID = LatestOrders.CustomerID AND SO.OrderDate = LatestOrders.LatestOrderDate;",
        "question": "la commande la plus récente passée par chaque client"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "Quels sont les modèles de produit qui n'ont aucune description associée ?",
        "query": "SELECT PM.ProductModelID, PM.Name FROM ProductModel AS PM LEFT JOIN ProductModelProductDescription AS PMPD ON PM.ProductModelID = PMPD.ProductModelID WHERE PMPD.ProductDescriptionID IS NULL;",
        "db_id": "adventure_works",
        "generated": "SELECT T1.Name FROM ProductModel AS T1 LEFT JOIN ProductModelProductDescription AS T2 ON T1.ProductModelID = T2.ProductModelID WHERE T2.ProductDescriptionID IS NULL;",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT PM.ProductModelID, PM.Name FROM ProductModel AS PM LEFT JOIN ProductModelProductDescription AS PMPD ON PM.ProductModelID = PMPD.ProductModelID WHERE PMPD.ProductDescriptionID IS NULL;",
        "question": "Quels sont les modèles de produit qui n'ont aucune description associée ?"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "totale des ventes par mois (TotalDue)",
        "query": "SELECT strftime('%Y-%m', OrderDate) AS YearMonth, SUM(TotalDue) AS TotalSales FROM SalesOrderHeader GROUP BY YearMonth ORDER BY YearMonth;",
        "db_id": "adventure_works",
        "generated": "SELECT DATE_TRUNC('month', TotalDue) , SUM(TotalDue) FROM SalesOrderHeader GROUP BY DATE_TRUNC('month', TotalDue);",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT strftime('%Y-%m', OrderDate) AS YearMonth, SUM(TotalDue) AS TotalSales FROM SalesOrderHeader GROUP BY YearMonth ORDER BY YearMonth;",
        "question": "totale des ventes par mois (TotalDue)"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "Affiche les produits dont le prix de vente est inférieur à 500",
        "query": "SELECT Name FROM Product WHERE ListPrice < 500",
        "db_id": "adventure_works",
        "generated": "SELECT Name FROM Product WHERE ListPrice < 500;",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT Name FROM Product WHERE ListPrice < 500",
        "question": "Affiche les produits dont le prix de vente est inférieur à 500"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "les 5 clients avec le plus grand nombre de commandes",
        "query": "SELECT C.FirstName, C.LastName, COUNT(SOH.SalesOrderID) AS OrderCount FROM Customer AS C INNER JOIN SalesOrderHeader AS SOH ON C.CustomerID = SOH.CustomerID GROUP BY C.FirstName, C.LastName ORDER BY OrderCount DESC LIMIT 5;",
        "db_id": "adventure_works",
        "generated": "SELECT T1.FirstName, T1.LastName FROM Customer AS T1 INNER JOIN SalesOrderHeader AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.FirstName, T1.LastName ORDER BY COUNT(*) DESC LIMIT 5;",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT C.FirstName, C.LastName, COUNT(SOH.SalesOrderID) AS OrderCount FROM Customer AS C INNER JOIN SalesOrderHeader AS SOH ON C.CustomerID = SOH.CustomerID GROUP BY C.FirstName, C.LastName ORDER BY OrderCount DESC LIMIT 5;",
        "question": "les 5 clients avec le plus grand nombre de commandes"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "Donnez les produits associés à un modèle mais sans catégorie.",
        "query": "SELECT P.ProductID, P.Name, P.ProductModelID FROM Product AS P INNER JOIN ProductModel AS PM ON P.ProductModelID = PM.ProductModelID WHERE P.ProductModelID IS NOT NULL AND P.ProductCategoryID IS NULL;",
        "db_id": "adventure_works",
        "generated": "SELECT T1.Name FROM Product AS T1 INNER JOIN ProductModel AS T2 ON T1.ProductModelID = T2.ProductModelID WHERE T2.Name = 'ModelName' EXCEPT SELECT T3.Name FROM Product AS T3 INNER JOIN ProductCategory AS T4 ON T3.ProductCategoryID = T4.ProductCategoryID WHERE T4.Name = 'CategoryName'",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT P.ProductID, P.Name, P.ProductModelID FROM Product AS P INNER JOIN ProductModel AS PM ON P.ProductModelID = PM.ProductModelID WHERE P.ProductModelID IS NOT NULL AND P.ProductCategoryID IS NULL;",
        "question": "Donnez les produits associés à un modèle mais sans catégorie."
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "Donnez la liste des produits jamais commandés dans aucune commande.",
        "query": "SELECT p.ProductID, p.Name FROM Product p LEFT JOIN SalesOrderDetail sod ON p.ProductID = sod.ProductID WHERE sod.ProductID IS NULL;",
        "db_id": "adventure_works",
        "generated": "SELECT Name FROM Product WHERE ProductID NOT IN ( SELECT ProductID FROM SalesOrderDetail ) ORDER BY Name ASC;",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT p.ProductID, p.Name FROM Product p LEFT JOIN SalesOrderDetail sod ON p.ProductID = sod.ProductID WHERE sod.ProductID IS NULL;",
        "question": "Donnez la liste des produits jamais commandés dans aucune commande."
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "Pour chaque produit, donne le nombre de fois qu'il a été commandé et la quantité totale.",
        "query": "SELECT p.ProductID, p.Name, COUNT(sod.SalesOrderDetailID) AS times_ordered, SUM(sod.OrderQty) AS total_quantity FROM Product p LEFT JOIN SalesOrderDetail sod ON p.ProductID = sod.ProductID GROUP BY p.ProductID;",
        "db_id": "adventure_works",
        "generated": "SELECT T2.Name, COUNT(T1.OrderQty) , SUM(T1.OrderQty) FROM SalesOrderDetail AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID GROUP BY T2.Name",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT p.ProductID, p.Name, COUNT(sod.SalesOrderDetailID) AS times_ordered, SUM(sod.OrderQty) AS total_quantity FROM Product p LEFT JOIN SalesOrderDetail sod ON p.ProductID = sod.ProductID GROUP BY p.ProductID;",
        "question": "Pour chaque produit, donne le nombre de fois qu'il a été commandé et la quantité totale."
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "Affiche le chiffre d'affaires total généré par chaque catégorie de produit.",
        "query": "SELECT pc.Name AS category, SUM(sod.LineTotal) AS total_revenue FROM SalesOrderDetail sod JOIN Product p ON sod.ProductID = p.ProductID JOIN ProductCategory pc ON p.ProductCategoryID = pc.ProductCategoryID GROUP BY pc.ProductCategoryID;",
        "db_id": "adventure_works",
        "generated": "SELECT PC.Name, SUM(PD.ListPrice) AS Total FROM Product AS PD INNER JOIN ProductCategory AS PC ON PD.ProductCategoryID = PC.ProductCategoryID GROUP BY PC.Name;",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT pc.Name AS category, SUM(sod.LineTotal) AS total_revenue FROM SalesOrderDetail sod JOIN Product p ON sod.ProductID = p.ProductID JOIN ProductCategory pc ON p.ProductCategoryID = pc.ProductCategoryID GROUP BY pc.ProductCategoryID;",
        "question": "Affiche le chiffre d'affaires total généré par chaque catégorie de produit."
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "Quels clients ont passé des commandes vers plus d'une adresse de livraison différente ?",
        "query": "SELECT CustomerID FROM SalesOrderHeader GROUP BY CustomerID HAVING COUNT(DISTINCT ShipToAddressID) > 1;",
        "db_id": "adventure_works",
        "generated": "SELECT T1.FirstName, T1.LastName FROM Customer AS T1 INNER JOIN CustomerAddress AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CustomerID HAVING COUNT(T2.AddressID) > 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT CustomerID FROM SalesOrderHeader GROUP BY CustomerID HAVING COUNT(DISTINCT ShipToAddressID) > 1;",
        "question": "Quels clients ont passé des commandes vers plus d'une adresse de livraison différente ?"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "la moyenne des commandes expédiées par mois",
        "query": "WITH MonthlyCounts AS (SELECT STRFTIME('%Y-%m', ShipDate) AS month,COUNT(DISTINCT SalesOrderID) AS shipped_orders FROM SalesOrderHeader WHERE ShipDate IS NOT NULL GROUP BY month) SELECT AVG(shipped_orders) AS avg_orders_per_month FROM MonthlyCounts;",
        "db_id": "adventure_works",
        "generated": "SELECT DATEPART(month ,  OrderDate) ,  COUNT(*) FROM SalesOrderHeader GROUP BY DATEPART(month ,  OrderDate);",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "WITH MonthlyCounts AS (SELECT STRFTIME('%Y-%m', ShipDate) AS month,COUNT(DISTINCT SalesOrderID) AS shipped_orders FROM SalesOrderHeader WHERE ShipDate IS NOT NULL GROUP BY month) SELECT AVG(shipped_orders) AS avg_orders_per_month FROM MonthlyCounts;",
        "question": "la moyenne des commandes expédiées par mois"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "les produits les plus commandés",
        "query": "SELECT p.Name, SUM(sod.OrderQty) AS total_quantity FROM SalesOrderDetail sod JOIN Product p ON sod.ProductID = p.ProductID GROUP BY sod.ProductID ORDER BY total_quantity DESC LIMIT 10;",
        "db_id": "adventure_works",
        "generated": "SELECT T2.Name FROM SalesOrderDetail AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 10;",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT p.Name, SUM(sod.OrderQty) AS total_quantity FROM SalesOrderDetail sod JOIN Product p ON sod.ProductID = p.ProductID GROUP BY sod.ProductID ORDER BY total_quantity DESC LIMIT 10;",
        "question": "les produits les plus commandés"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "le nombre de commande expédiées par mois",
        "query": "SELECT STRFTIME('%Y-%m', ShipDate) AS month, COUNT(DISTINCT SalesOrderID) AS shipped_orders FROM SalesOrderHeader WHERE ShipDate IS NOT NULL GROUP BY month ORDER BY month;",
        "db_id": "adventure_works",
        "generated": "SELECT DATE_TRUNC('month', OrderDate) ,  COUNT(*) FROM SalesOrderHeader GROUP BY DATE_TRUNC('month', OrderDate);",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT STRFTIME('%Y-%m', ShipDate) AS month, COUNT(DISTINCT SalesOrderID) AS shipped_orders FROM SalesOrderHeader WHERE ShipDate IS NOT NULL GROUP BY month ORDER BY month;",
        "question": "le nombre de commande expédiées par mois"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "les clients ayant dépensé le plus en commandes",
        "query": "SELECT STRFTIME('%Y-%m', ShipDate) AS month, COUNT(DISTINCT SalesOrderID) AS shipped_orders FROM SalesOrderHeader WHERE ShipDate IS NOT NULL GROUP BY month ORDER BY month;",
        "db_id": "adventure_works",
        "generated": "SELECT T1.FirstName, T1.LastName FROM Customer AS T1 INNER JOIN SalesOrderHeader AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.FirstName, T1.LastName ORDER BY COUNT(*) DESC LIMIT 1;",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT STRFTIME('%Y-%m', ShipDate) AS month, COUNT(DISTINCT SalesOrderID) AS shipped_orders FROM SalesOrderHeader WHERE ShipDate IS NOT NULL GROUP BY month ORDER BY month;",
        "question": "les clients ayant dépensé le plus en commandes"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "Pour chaque client, affichez la date de sa première commande et le montant total de ses commandes.",
        "query": "SELECT c.CustomerID, MIN(soh.OrderDate) AS first_order_date, SUM(soh.TotalDue) AS total_spent FROM SalesOrderHeader soh JOIN Customer c ON soh.CustomerID = c.CustomerID GROUP BY c.CustomerID;",
        "db_id": "adventure_works",
        "generated": "SELECT T1.FirstName, T1.LastName, T2.OrderDate, SUM(T2.TotalDue) FROM Customer AS T1 INNER JOIN SalesOrderHeader AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CustomerID;",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT c.CustomerID, MIN(soh.OrderDate) AS first_order_date, SUM(soh.TotalDue) AS total_spent FROM SalesOrderHeader soh JOIN Customer c ON soh.CustomerID = c.CustomerID GROUP BY c.CustomerID;",
        "question": "Pour chaque client, affichez la date de sa première commande et le montant total de ses commandes."
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "les 5 villes avec le plus de clients ayant passé au moins une commande",
        "query": "SELECT a.City, COUNT(DISTINCT soh.CustomerID) AS unique_customers FROM SalesOrderHeader soh JOIN Address a ON soh.ShipToAddressID = a.AddressID GROUP BY a.City ORDER BY unique_customers DESC LIMIT 5;",
        "db_id": "adventure_works",
        "generated": "SELECT T2.City FROM CustomerAddress AS T1 INNER JOIN Address AS T2 ON T1.AddressID = T2.AddressID GROUP BY T2.City ORDER BY COUNT(T1.CustomerID) DESC LIMIT 5;",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT a.City, COUNT(DISTINCT soh.CustomerID) AS unique_customers FROM SalesOrderHeader soh JOIN Address a ON soh.ShipToAddressID = a.AddressID GROUP BY a.City ORDER BY unique_customers DESC LIMIT 5;",
        "question": "les 5 villes avec le plus de clients ayant passé au moins une commande"
    },
    {
        "difficulty": "easy",
        "language": "fr",
        "prompt": "donnez la description de chaque produit",
        "query": "SELECT p.ProductID, p.Name, pd.Description FROM Product p JOIN ProductModelProductDescription pmpd ON p.ProductModelID = pmpd.ProductModelID JOIN ProductDescription pd ON pmpd.ProductDescriptionID = pd.ProductDescriptionID;",
        "db_id": "adventure_works",
        "generated": "SELECT T2.Description FROM Product AS T1 INNER JOIN ProductDescription AS T2 ON T1.ProductID = T2.ProductDescriptionID WHERE T1.Name = 'Dark Chocolate Biscuits'",
        "db_path": "/home/esteban/Documents/CHATINDUS_modified/databases/adventure_works/adventure_works.sqlite",
        "SQL": "SELECT p.ProductID, p.Name, pd.Description FROM Product p JOIN ProductModelProductDescription pmpd ON p.ProductModelID = pmpd.ProductModelID JOIN ProductDescription pd ON pmpd.ProductDescriptionID = pd.ProductDescriptionID;",
        "question": "donnez la description de chaque produit"
    }
]