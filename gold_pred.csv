prompt,gold,pred
donnez les adresses,SELECT * FROM Address;,"SELECT T2.AddressLine1, T2.AddressLine2 FROM CustomerAddress AS T1 INNER JOIN Address AS T2 ON T1.AddressID = T2.AddressID WHERE T1.CustomerID = 1"
donnez la noms des produits,SELECT * FROM Product;,SELECT Name FROM Product WHERE ProductID = 1001 OR ProductID = 1002 OR ProductID = 1003;
les clients ayant une adresse mail,"SELECT FirstName, LastName FROM Customer WHERE Customer.EmailAddress IS NOT NULL;","error: (sqlite3.OperationalError) Could not decode to UTF-8 column 'FirstName' with text 'Fran�ois'
(Background on this error at: https://sqlalche.me/e/20/e3q8)"
donnez les categories des produits,SELECT Name FROM ProductCategory;,SELECT Name FROM ProductCategory;
donnez les couleurs que peut avoir un produit,SELECT DISTINCT Color FROM Product;,SELECT DISTINCT Color FROM Product;
donnez les prix des produits,"SELECT Name, ListPrice FROM Product;",SELECT ListPrice FROM Product WHERE Name = 'Dark Chocolate Buns'
donnez tous les ordres,SELECT * FROM SalesOrderDetail;,SELECT * FROM SalesOrderHeader
donnez les types d'adresses,SELECT DISTINCT AddressType FROM CustomerAddress;,SELECT DISTINCT AddressType FROM CustomerAddress WHERE AddressType IS NOT NULL;
donnez les méthodes de livraison,SELECT DSTINCT ShipMethod FROM SalesOrderHeader;,SELECT DISTINCT ShipMethod FROM SalesOrderHeader WHERE ShipMethod IS NOT NULL;
donnez les prix standards,"SELECT Name, StandardPrice FROM Product;",SELECT StandardCost FROM Product WHERE Name = 'Standard T-Shirt'
donnez la moyenne du poids des produits,SELECT AVG(Weight) FROM Product;,SELECT AVG(Weight) FROM Product;
affichez les produits avec une vente inferieur de 500 pièces,"SELECT P.ProductID, P.Name, SUM(SD.OrderQty) AS TotalSold FROM Product P JOIN SalesOrderDetail SD ON P.ProductID = SD.ProductID GROUP BY P.ProductID HAVING TotalSold < 500 ORDER BY TotalSold ASC;",SELECT Name FROM Product WHERE ListPrice < 500;
donnez le vendeur qui a le plus de client,"SELECT SalesPerson, Count(*) AS CustomerCount from Customer GROUP BY SalesPerson ORDER BY CustomerCount DESC LIMIT 1;",SELECT Title FROM Customer ORDER BY COUNT(*) DESC LIMIT 1
donnez les produits avec une durée entre le debut et fin de vente de 10 jours,SELECT Product.Name FROM PRODUCT WHERE SellEndDate IS NOT NULL AND julianday(SellEndDate) - julianday(SellStartDate) = 10;,SELECT T1.Name FROM Product AS T1 INNER JOIN ProductModelProductDescription AS T2 ON T1.ProductModelID = T2.ProductModelID WHERE T1.SellEndDate - T1.SellStartDate BETWEEN 10 AND 10 GROUP BY T1.Name;
donnez le nombre total de produit par categories,"SELECT ProductCategory.Name, COUNT(Product.ProductID) INNER JOIN Product ON Product.ProductID = ProductCategory.ProductID GROUP BY ProductCategory.Name;","SELECT pc.name, COUNT(p.productcategoryid) FROM product AS p JOIN productcategory AS pc ON p.productcategoryid = pc.productcategoryid GROUP BY pc.name;"
les clients avec plusieurs adresses,"SELECT Customer.LastName, Customer.FirstName FROM Customer INNER JOIN CustomerAddress ON CustomerAddress.CustomerID=Customer.CustomerID GROUP BY Customer.CustomerID HAVING COUNT(CustomerAddress.AddressID) > 1","SELECT T1.FirstName, T1.LastName FROM Customer AS T1 INNER JOIN CustomerAddress AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CustomerID HAVING COUNT(T2.AddressID) > 1;"
la commande la plus récente passée par chaque client,"SELECT SO.CustomerID, SO.SalesOrderID, SO.OrderDate FROM SalesOrderHeader SO INNER JOIN (SELECT CustomerID, MAX(OrderDate) AS LatestOrderDate FROM SalesOrderHeader GROUP BY CustomerID) AS LatestOrders ON SO.CustomerID = LatestOrders.CustomerID AND SO.OrderDate = LatestOrders.LatestOrderDate;","SELECT T2.FirstName, T2.LastName, T1.OrderDate FROM SalesOrderHeader AS T1 INNER JOIN Customer AS T2 ON T1.CustomerID = T2.CustomerID ORDER BY T1.OrderDate DESC LIMIT 1;"
Quels sont les modèles de produit qui n'ont aucune description associée ?,"SELECT PM.ProductModelID, PM.Name FROM ProductModel AS PM LEFT JOIN ProductModelProductDescription AS PMPD ON PM.ProductModelID = PMPD.ProductModelID WHERE PMPD.ProductDescriptionID IS NULL;",SELECT T1.Name FROM ProductModel AS T1 LEFT JOIN ProductModelProductDescription AS T2 ON T1.ProductModelID = T2.ProductModelID WHERE T2.ProductDescriptionID IS NULL;
totale des ventes par mois (TotalDue),"SELECT strftime('%Y-%m', OrderDate) AS YearMonth, SUM(TotalDue) AS TotalSales FROM SalesOrderHeader GROUP BY YearMonth ORDER BY YearMonth;","SELECT DATE_TRUNC('month', TotalDue) , SUM(TotalDue) FROM SalesOrderHeader GROUP BY DATE_TRUNC('month', TotalDue);"
Affiche les produits dont le prix de vente est inférieur à 500,SELECT Name FROM Product WHERE ListPrice < 500,SELECT Name FROM Product WHERE ListPrice < 500;
les 5 clients avec le plus grand nombre de commandes,"SELECT C.FirstName, C.LastName, COUNT(SOH.SalesOrderID) AS OrderCount FROM Customer AS C INNER JOIN SalesOrderHeader AS SOH ON C.CustomerID = SOH.CustomerID GROUP BY C.FirstName, C.LastName ORDER BY OrderCount DESC LIMIT 5;","SELECT T1.FirstName, T1.LastName FROM Customer AS T1 INNER JOIN SalesOrderHeader AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.FirstName, T1.LastName ORDER BY COUNT(*) DESC LIMIT 5;"
Donnez les produits associés à un modèle mais sans catégorie.,"SELECT P.ProductID, P.Name, P.ProductModelID FROM Product AS P INNER JOIN ProductModel AS PM ON P.ProductModelID = PM.ProductModelID WHERE P.ProductModelID IS NOT NULL AND P.ProductCategoryID IS NULL;",SELECT T1.Name FROM Product AS T1 INNER JOIN ProductModel AS T2 ON T1.ProductModelID = T2.ProductModelID WHERE T2.Name = 'ModelName' EXCEPT SELECT T3.Name FROM Product AS T3 INNER JOIN ProductCategory AS T4 ON T3.ProductCategoryID = T4.ProductCategoryID WHERE T4.Name = 'CategoryName'
Affiche les détails de commande pour les produits de couleur rouge.,"SELECT SalesOrderDetails.* FROM SalesOrderDetails INNER JOIN Product ON Product.ProductID = SalesOrderDetails.ProductID WHERE LOWER(P.Color) IN ('red', 'rouge');","SELECT T2.OrderQty, T2.UnitPrice, T2.UnitPriceDiscount, T1.ListPrice FROM Product AS T1 INNER JOIN SalesOrderDetail AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Color = 'Red' GROUP BY T2.OrderQty, T2.UnitPrice, T2.UnitPriceDiscount, T1.ListPrice;"
Donnez la liste des produits jamais commandés dans aucune commande.,"SELECT p.ProductID, p.Name FROM Product p LEFT JOIN SalesOrderDetail sod ON p.ProductID = sod.ProductID WHERE sod.ProductID IS NULL;",SELECT Name FROM Product WHERE ProductID NOT IN (SELECT ProductID FROM SalesOrderDetail) ORDER BY Name ASC;
"Pour chaque produit, donne le nombre de fois qu’il a été commandé et la quantité totale.","SELECT p.ProductID, p.Name, COUNT(sod.SalesOrderDetailID) AS times_ordered, SUM(sod.OrderQty) AS total_quantity FROM Product p LEFT JOIN SalesOrderDetail sod ON p.ProductID = sod.ProductID GROUP BY p.ProductID;","SELECT T2.Name, COUNT(T1.OrderQty) , SUM(T1.OrderQty) FROM SalesOrderDetail AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID GROUP BY T2.Name"
Affiche le chiffre d’affaires total généré par chaque catégorie de produit.,"SELECT pc.Name AS category, SUM(sod.LineTotal) AS total_revenue FROM SalesOrderDetail sod JOIN Product p ON sod.ProductID = p.ProductID JOIN ProductCategory pc ON p.ProductCategoryID = pc.ProductCategoryID GROUP BY pc.ProductCategoryID;","SELECT PC.Name ,  SUM(P.ListPrice * P.OrderQty) FROM Product P  JOIN ProductCategory PC ON P.ProductCategoryID  =  PC.ProductCategoryID GROUP BY PC.Name;"
Quels clients ont passé des commandes vers plus d'une adresse de livraison différente ?,SELECT CustomerID FROM SalesOrderHeader GROUP BY CustomerID HAVING COUNT(DISTINCT ShipToAddressID) > 1;,"SELECT T1.FirstName, T1.LastName FROM Customer AS T1 INNER JOIN CustomerAddress AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CustomerID HAVING COUNT(T2.AddressID) > 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
la moyenne des commandes expédiées par mois,"WITH MonthlyCounts AS (SELECT STRFTIME('%Y-%m', ShipDate) AS month,COUNT(DISTINCT SalesOrderID) AS shipped_orders FROM SalesOrderHeader WHERE ShipDate IS NOT NULL GROUP BY month) SELECT AVG(shipped_orders) AS avg_orders_per_month FROM MonthlyCounts;","SELECT DATEPART(month ,  OrderDate) ,  COUNT(*) FROM SalesOrderHeader GROUP BY DATEPART(month ,  OrderDate);"
les produits les plus commandés,"SELECT p.Name, SUM(sod.OrderQty) AS total_quantity FROM SalesOrderDetail sod JOIN Product p ON sod.ProductID = p.ProductID GROUP BY sod.ProductID ORDER BY total_quantity DESC LIMIT 10;",SELECT T2.Name FROM SalesOrderDetail AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 10;
le nombre de commande expédiées par mois,"SELECT STRFTIME('%Y-%m', ShipDate) AS month, COUNT(DISTINCT SalesOrderID) AS shipped_orders FROM SalesOrderHeader WHERE ShipDate IS NOT NULL GROUP BY month ORDER BY month;","SELECT DATE_TRUNC('month', OrderDate) ,  COUNT(*) FROM SalesOrderHeader GROUP BY DATE_TRUNC('month', OrderDate);"
les clients ayant dépensée le plus en commandes,"SELECT STRFTIME('%Y-%m', ShipDate) AS month, COUNT(DISTINCT SalesOrderID) AS shipped_orders FROM SalesOrderHeader WHERE ShipDate IS NOT NULL GROUP BY month ORDER BY month;","SELECT T1.FirstName, T1.LastName FROM Customer AS T1 INNER JOIN SalesOrderHeader AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.FirstName, T1.LastName ORDER BY COUNT(*) DESC LIMIT 1;"
"Pour chaque client, affichez la date de sa première commande et le montant total de ses commandes.","SELECT c.CustomerID, MIN(soh.OrderDate) AS first_order_date, SUM(soh.TotalDue) AS total_spent FROM SalesOrderHeader soh JOIN Customer c ON soh.CustomerID = c.CustomerID GROUP BY c.CustomerID;","SELECT T1.FirstName, T1.LastName, T2.OrderDate, SUM(T2.TotalDue) FROM Customer AS T1 INNER JOIN SalesOrderHeader AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CustomerID;"
les 5 villes avec le plus de clients ayant passé au moins une commande,"SELECT a.City, COUNT(DISTINCT soh.CustomerID) AS unique_customers FROM SalesOrderHeader soh JOIN Address a ON soh.ShipToAddressID = a.AddressID GROUP BY a.City ORDER BY unique_customers DESC LIMIT 5;",SELECT T2.City FROM Customer AS T1 INNER JOIN Address AS T2 ON T1.CustomerID = T2.AddressID GROUP BY T2.City ORDER BY COUNT(T1.CustomerID) DESC LIMIT 5;
donnez la description de chaque produit,"SELECT p.ProductID, p.Name, pd.Description FROM Product p JOIN ProductModelProductDescription pmpd ON p.ProductModelID = pmpd.ProductModelID JOIN ProductDescription pd ON pmpd.ProductDescriptionID = pd.ProductDescriptionID;",SELECT T2.Description FROM Product AS T1 INNER JOIN ProductDescription AS T2 ON T1.ProductID = T2.ProductDescriptionID WHERE T1.Name = 'Dark Chocolate Biscuits'
